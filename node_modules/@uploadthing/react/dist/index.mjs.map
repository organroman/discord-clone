{"version":3,"sources":["../src/components/button.tsx","../src/utils/styles.ts","../src/components/shared.tsx","../src/components/dropzone.tsx","../src/component.tsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { twMerge } from \"tailwind-merge\";\n\nimport { generateMimeTypes } from \"uploadthing/client\";\nimport type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { INTERNAL_uploadthingHookGen } from \"../useUploadThing\";\nimport type { ContentField, StyleField } from \"../utils/styles\";\nimport {\n  contentFieldToContent,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n} from \"../utils/styles\";\nimport {\n  allowedContentTextLabelGenerator,\n  generatePermittedFileTypes,\n  progressWidths,\n  Spinner,\n} from \"./shared\";\n\ntype ButtonStyleFieldCallbackArgs = {\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n};\n\nexport type UploadButtonProps<TRouter extends FileRouter> =\n  UploadthingComponentProps<TRouter> & {\n    appearance?: {\n      container?: StyleField<ButtonStyleFieldCallbackArgs>;\n      button?: StyleField<ButtonStyleFieldCallbackArgs>;\n      allowedContent?: StyleField<ButtonStyleFieldCallbackArgs>;\n    };\n    content?: {\n      button?: ContentField<ButtonStyleFieldCallbackArgs>;\n      allowedContent?: ContentField<ButtonStyleFieldCallbackArgs>;\n    };\n    className?: string;\n  };\n\n/**\n * @example\n * <UploadButton<OurFileRouter>\n *   endpoint=\"someEndpoint\"\n *   onUploadComplete={(res) => console.log(res)}\n *   onUploadError={(err) => console.log(err)}\n * />\n */\nexport function UploadButton<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadButtonProps<TRouter>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadButtonProps<TRouter> & {\n    // props not exposed on public type\n    // Allow to set internal state for testing\n    __internal_state?: \"readying\" | \"ready\" | \"uploading\";\n    // Allow to set upload progress for testing\n    __internal_upload_progress?: number;\n    // Allow to set ready explicitly and independently of internal state\n    __internal_ready?: boolean;\n    // Allow to disable the button\n    __internal_button_disabled?: boolean;\n  };\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>();\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploadProgressState, setUploadProgress] = useState(\n    $props.__internal_upload_progress ?? 0,\n  );\n  const uploadProgress =\n    $props.__internal_upload_progress ?? uploadProgressState;\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError,\n    },\n  );\n\n  const { fileTypes, multiple } = generatePermittedFileTypes(\n    permittedFileInfo?.config,\n  );\n\n  const ready =\n    $props.__internal_ready ??\n    ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n\n  const getUploadButtonText = (fileTypes: string[]) => {\n    if (fileTypes.length === 0) return \"Loading...\";\n    return `Choose File${multiple ? `(s)` : ``}`;\n  };\n\n  const getInputProps = () => ({\n    className: \"hidden\",\n    type: \"file\",\n    ref: fileInputRef,\n    multiple,\n    accept: generateMimeTypes(fileTypes ?? [])?.join(\", \"),\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!e.target.files) return;\n      const input = \"input\" in $props ? $props.input : undefined;\n      const files = Array.from(e.target.files);\n      void startUpload(files, input);\n    },\n    disabled: $props.__internal_button_disabled ?? !ready,\n  });\n\n  const styleFieldArg: ButtonStyleFieldCallbackArgs = {\n    ready: ready,\n    isUploading: $props.__internal_state === \"uploading\" || isUploading,\n    uploadProgress,\n    fileTypes,\n  };\n\n  const state = (() => {\n    if ($props.__internal_state) return $props.__internal_state;\n    if (!ready) return \"readying\";\n    if (ready && !isUploading) return \"ready\";\n\n    return \"uploading\";\n  })();\n\n  return (\n    <div\n      className={twMerge(\n        \"flex flex-col items-center justify-center gap-1\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      style={styleFieldToCssObject($props.appearance?.container, styleFieldArg)}\n      data-state={state}\n    >\n      <label\n        className={twMerge(\n          \"relative flex h-10 w-36 cursor-pointer items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500\",\n          state === \"readying\" && \"cursor-not-allowed bg-blue-400\",\n          state === \"uploading\" &&\n            `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 ${progressWidths[uploadProgress]}`,\n          state === \"ready\" && \"bg-blue-600\",\n          styleFieldToClassName($props.appearance?.button, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.button, styleFieldArg)}\n        data-state={state}\n        data-ut-element=\"button\"\n      >\n        <input {...getInputProps()} />\n        {contentFieldToContent($props.content?.button, styleFieldArg) ??\n          (state === \"uploading\" ? (\n            <Spinner />\n          ) : (\n            getUploadButtonText(fileTypes)\n          ))}\n      </label>\n      <div\n        className={twMerge(\n          \"h-[1.25rem]  text-xs leading-5 text-gray-600\",\n          styleFieldToClassName(\n            $props.appearance?.allowedContent,\n            styleFieldArg,\n          ),\n        )}\n        style={styleFieldToCssObject(\n          $props.appearance?.allowedContent,\n          styleFieldArg,\n        )}\n        data-state={state}\n        data-ut-element=\"allowed-content\"\n      >\n        {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n          allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n      </div>\n    </div>\n  );\n}\n","import type { CSSProperties, ReactNode } from \"react\";\n\nexport type StyleField<CallbackArg> =\n  | string\n  | CSSProperties\n  | ((arg: CallbackArg) => string | CSSProperties);\nexport type ContentField<CallbackArg> =\n  | ReactNode\n  | ((arg: CallbackArg) => ReactNode);\n\nexport const styleFieldToClassName = <T>(\n  styleField: StyleField<T> | undefined,\n  args: T,\n) => {\n  if (typeof styleField === \"string\") return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n\n    if (typeof result === \"string\") return result;\n  }\n\n  return \"\";\n};\n\nexport const styleFieldToCssObject = <T>(\n  styleField: StyleField<T> | undefined,\n  args: T,\n) => {\n  if (typeof styleField === \"object\") return styleField;\n  if (typeof styleField === \"function\") {\n    const result = styleField(args);\n\n    if (typeof result === \"object\") return result;\n  }\n\n  return {};\n};\n\nexport const contentFieldToContent = <T>(\n  contentField: ContentField<T> | undefined,\n  arg: T,\n) => {\n  if (!contentField) return null;\n  if (typeof contentField !== \"function\") return contentField;\n  if (typeof contentField === \"function\") {\n    const result = contentField(arg);\n\n    return result;\n  }\n};\n","import type { ExpandedRouteConfig } from \"@uploadthing/shared\";\n\nexport const generatePermittedFileTypes = (config?: ExpandedRouteConfig) => {\n  const fileTypes = config ? Object.keys(config) : [];\n\n  const maxFileCount = config\n    ? Object.values(config).map((v) => v.maxFileCount)\n    : [];\n\n  return { fileTypes, multiple: maxFileCount.some((v) => v && v > 1) };\n};\n\nexport const capitalizeStart = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const INTERNAL_doFormatting = (config?: ExpandedRouteConfig): string => {\n  if (!config) return \"\";\n\n  const allowedTypes = Object.keys(config) as (keyof ExpandedRouteConfig)[];\n\n  const formattedTypes = allowedTypes.map((f) => {\n    if (f.includes(\"/\")) return `${f.split(\"/\")[1].toUpperCase()} file`;\n    return f === \"blob\" ? \"file\" : f;\n  });\n\n  // Format multi-type uploader label as \"Supports videos, images and files\";\n  if (formattedTypes.length > 1) {\n    const lastType = formattedTypes.pop();\n    return `${formattedTypes.join(\"s, \")} and ${lastType}s`;\n  }\n\n  // Single type uploader label\n  const key = allowedTypes[0];\n  const formattedKey = formattedTypes[0];\n\n  const { maxFileSize, maxFileCount } = config[key]!;\n\n  if (maxFileCount && maxFileCount > 1) {\n    return `${formattedKey}s up to ${maxFileSize}, max ${maxFileCount}`;\n  } else {\n    return `${formattedKey} (${maxFileSize})`;\n  }\n};\n\nexport const allowedContentTextLabelGenerator = (\n  config?: ExpandedRouteConfig,\n): string => {\n  return capitalizeStart(INTERNAL_doFormatting(config));\n};\n\nexport const progressWidths: Record<number, string> = {\n  0: \"after:w-0\",\n  10: \"after:w-[10%]\",\n  20: \"after:w-[20%]\",\n  30: \"after:w-[30%]\",\n  40: \"after:w-[40%]\",\n  50: \"after:w-[50%]\",\n  60: \"after:w-[60%]\",\n  70: \"after:w-[70%]\",\n  80: \"after:w-[80%]\",\n  90: \"after:w-[90%]\",\n  100: \"after:w-[100%]\",\n};\n\nexport function Spinner() {\n  return (\n    <svg\n      className=\"block h-5 w-5 animate-spin align-middle text-white\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M256 32C256 14.33 270.3 0 288 0C429.4 0 544 114.6 544 256C544 302.6 531.5 346.4 509.7 384C500.9 399.3 481.3 404.6 465.1 395.7C450.7 386.9 445.5 367.3 454.3 351.1C470.6 323.8 480 291 480 255.1C480 149.1 394 63.1 288 63.1C270.3 63.1 256 49.67 256 31.1V32z\"\n      />\n    </svg>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport type { FileWithPath } from \"react-dropzone\";\nimport { useDropzone } from \"react-dropzone\";\nimport { twMerge } from \"tailwind-merge\";\n\nimport { classNames, generateClientDropzoneAccept } from \"uploadthing/client\";\nimport type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport type { UploadthingComponentProps } from \"../types\";\nimport { INTERNAL_uploadthingHookGen } from \"../useUploadThing\";\nimport type { ContentField, StyleField } from \"../utils/styles\";\nimport {\n  contentFieldToContent,\n  styleFieldToClassName,\n  styleFieldToCssObject,\n} from \"../utils/styles\";\nimport {\n  allowedContentTextLabelGenerator,\n  generatePermittedFileTypes,\n  progressWidths,\n  Spinner,\n} from \"./shared\";\n\ntype DropzoneStyleFieldCallbackArgs = {\n  ready: boolean;\n  isUploading: boolean;\n  uploadProgress: number;\n  fileTypes: string[];\n  isDragActive: boolean;\n};\n\nexport type UploadDropzoneProps<TRouter extends FileRouter> =\n  UploadthingComponentProps<TRouter> & {\n    appearance?: {\n      container?: StyleField<DropzoneStyleFieldCallbackArgs>;\n      uploadIcon?: StyleField<DropzoneStyleFieldCallbackArgs>;\n      label?: StyleField<DropzoneStyleFieldCallbackArgs>;\n      allowedContent?: StyleField<DropzoneStyleFieldCallbackArgs>;\n      button?: StyleField<DropzoneStyleFieldCallbackArgs>;\n    };\n    content?: {\n      uploadIcon?: ContentField<DropzoneStyleFieldCallbackArgs>;\n      label?: ContentField<DropzoneStyleFieldCallbackArgs>;\n      allowedContent?: ContentField<DropzoneStyleFieldCallbackArgs>;\n      button?: ContentField<DropzoneStyleFieldCallbackArgs>;\n    };\n    className?: string;\n  };\n\nexport function UploadDropzone<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadDropzoneProps<TRouter>,\n) {\n  // Cast back to UploadthingComponentProps<TRouter> to get the correct type\n  // since the ErrorMessage messes it up otherwise\n  const $props = props as unknown as UploadDropzoneProps<TRouter> & {\n    // props not exposed on public type\n    // Allow to set internal state for testing\n    __internal_state?: \"readying\" | \"ready\" | \"uploading\",\n    // Allow to set upload progress for testing\n    __internal_upload_progress?: number,\n    // Allow to set ready explicitly and independently of internal state\n    __internal_ready?: boolean,\n    // Allow to show the button even if no files were added\n    __internal_show_button?: boolean,\n    // Allow to disable the button\n    __internal_button_disabled?: boolean,\n    // Allow to disable the dropzone\n    __internal_dropzone_disabled?: boolean,\n  };\n  const useUploadThing = INTERNAL_uploadthingHookGen<TRouter>();\n\n  const [files, setFiles] = useState<File[]>([]);\n  const onDrop = useCallback((acceptedFiles: FileWithPath[]) => {\n    setFiles(acceptedFiles);\n  }, []);\n\n  const [uploadProgressState, setUploadProgress] = useState($props.__internal_upload_progress ?? 0);\n  const uploadProgress = $props.__internal_upload_progress ?? uploadProgressState;\n  const { startUpload, isUploading, permittedFileInfo } = useUploadThing(\n    $props.endpoint,\n    {\n      onClientUploadComplete: (res) => {\n        setFiles([]);\n        $props.onClientUploadComplete?.(res);\n        setUploadProgress(0);\n      },\n      onUploadProgress: (p) => {\n        setUploadProgress(p);\n        $props.onUploadProgress?.(p);\n      },\n      onUploadError: $props.onUploadError\n    },\n  );\n\n  const { fileTypes } = generatePermittedFileTypes(permittedFileInfo?.config);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: fileTypes ? generateClientDropzoneAccept(fileTypes) : undefined,\n    disabled: $props.__internal_dropzone_disabled\n  });\n\n  const ready = $props.__internal_ready ?? ($props.__internal_state === \"ready\" || fileTypes.length > 0);\n\n  const onUploadClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!files) return;\n\n    const input = \"input\" in $props ? $props.input : undefined;\n    void startUpload(files, input);\n  };\n\n  const styleFieldArg: DropzoneStyleFieldCallbackArgs = {\n    fileTypes,\n    isDragActive,\n    isUploading,\n    ready,\n    uploadProgress,\n  };\n\n  const state = (() => {\n    if ($props.__internal_state) return $props.__internal_state;\n    if (!ready) return \"readying\";\n    if (ready && !isUploading) return \"ready\";\n\n    return \"uploading\";\n  })();\n\n  return (\n    <div\n      className={twMerge(\n        \"mt-2 flex flex-col items-center justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10 text-center\",\n        isDragActive && \"bg-blue-600/10\",\n        $props.className,\n        styleFieldToClassName($props.appearance?.container, styleFieldArg),\n      )}\n      {...getRootProps()}\n      style={styleFieldToCssObject($props.appearance?.container, styleFieldArg)}\n      data-state={state}\n    >\n      {contentFieldToContent($props.content?.uploadIcon, styleFieldArg) ?? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          className={twMerge(\n            \"mx-auto block h-12 w-12 align-middle text-gray-400\",\n            styleFieldToClassName($props.appearance?.uploadIcon, styleFieldArg),\n          )}\n          style={styleFieldToCssObject(\n            $props.appearance?.uploadIcon,\n            styleFieldArg,\n          )}\n          data-ut-element=\"upload-icon\"\n          data-state={state}\n        >\n          <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M5.5 17a4.5 4.5 0 0 1-1.44-8.765a4.5 4.5 0 0 1 8.302-3.046a3.5 3.5 0 0 1 4.504 4.272A4 4 0 0 1 15 17H5.5Zm3.75-2.75a.75.75 0 0 0 1.5 0V9.66l1.95 2.1a.75.75 0 1 0 1.1-1.02l-3.25-3.5a.75.75 0 0 0-1.1 0l-3.25 3.5a.75.75 0 1 0 1.1 1.02l1.95-2.1v4.59Z\"\n            clipRule=\"evenodd\"\n          ></path>\n        </svg>\n      )}\n      <label\n        htmlFor=\"file-upload\"\n        className={twMerge(\n          classNames(\n            \"relative mt-4 flex w-64 cursor-pointer items-center justify-center text-sm font-semibold leading-6 text-gray-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-offset-2 hover:text-blue-500\",\n            ready ? \"text-blue-600\" : \"text-gray-500\",\n          ),\n          styleFieldToClassName($props.appearance?.label, styleFieldArg),\n        )}\n        style={styleFieldToCssObject($props.appearance?.label, styleFieldArg)}\n        data-ut-element=\"label\"\n        data-state={state}\n      >\n        {contentFieldToContent($props.content?.label, styleFieldArg) ??\n          (ready ? `Choose files or drag and drop` : `Loading...`)}\n        <input className=\"sr-only\" {...getInputProps()} />\n      </label>\n      <div\n        className={twMerge(\n          \"m-0 h-[1.25rem] text-xs leading-5 text-gray-600\",\n          styleFieldToClassName(\n            $props.appearance?.allowedContent,\n            styleFieldArg,\n          ),\n        )}\n        style={styleFieldToCssObject(\n          $props.appearance?.allowedContent,\n          styleFieldArg,\n        )}\n        data-ut-element=\"allowed-content\"\n        data-state={state}\n      >\n        {contentFieldToContent($props.content?.allowedContent, styleFieldArg) ??\n          allowedContentTextLabelGenerator(permittedFileInfo?.config)}\n      </div>\n      {($props.__internal_show_button ?? files.length > 0) && (\n        <button\n          className={twMerge(\n            classNames(\n              \"relative mt-4 flex h-10 w-36 items-center justify-center overflow-hidden rounded-md text-white after:transition-[width] after:duration-500\",\n              state === 'uploading'\n                ? `bg-blue-400 after:absolute after:left-0 after:h-full after:bg-blue-600 ${progressWidths[uploadProgress]}`\n                : \"bg-blue-600\",\n            ),\n            styleFieldToClassName($props.appearance?.button, styleFieldArg),\n          )}\n          style={styleFieldToCssObject(\n            $props.appearance?.button,\n            styleFieldArg,\n          )}\n          onClick={onUploadClick}\n          data-ut-element=\"button\"\n          data-state={state}\n          disabled={$props.__internal_button_disabled ?? state === 'uploading'}\n        >\n          {contentFieldToContent($props.content?.button, styleFieldArg) ??\n            (state === 'uploading' ? (\n              <Spinner />\n            ) : (\n              `Upload ${files.length} file${files.length === 1 ? \"\" : \"s\"}`\n            ))}\n        </button>\n      )}\n    </div>\n  );\n}\n","import type { ErrorMessage, FileRouter } from \"uploadthing/server\";\n\nimport { UploadButton } from \"./components/button\";\nimport { UploadDropzone } from \"./components/dropzone\";\nimport type { UploadthingComponentProps } from \"./types\";\n\nexport function Uploader<TRouter extends FileRouter>(\n  props: FileRouter extends TRouter\n    ? ErrorMessage<\"You forgot to pass the generic\">\n    : UploadthingComponentProps<TRouter>,\n) {\n  return (\n    <>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`Upload a file using a button:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadButton<TRouter> {...props} />\n      </div>\n      <div className=\"flex flex-col items-center justify-center gap-4\">\n        <span className=\"text-center text-4xl font-bold\">\n          {`...or using a dropzone:`}\n        </span>\n        {/* @ts-expect-error - this is validated above */}\n        <UploadDropzone<TRouter> {...props} />\n      </div>\n    </>\n  );\n}\n\nexport function generateComponents<TRouter extends FileRouter>() {\n  return {\n    UploadButton: UploadButton<TRouter>,\n    UploadDropzone: UploadDropzone<TRouter>,\n    Uploader: Uploader<TRouter>,\n  };\n}\n\nexport { UploadButton, UploadDropzone };\n"],"mappings":"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","names":["jsx","_a","fileTypes","useState","twMerge","jsx","jsxs","useState","_a","twMerge","jsx","jsxs"]}