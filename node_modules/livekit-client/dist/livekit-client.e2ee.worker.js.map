{"version":3,"file":"livekit-client.e2ee.worker.js","sources":["../node_modules/loglevel/lib/loglevel.js","../src/logger.ts","../src/e2ee/constants.ts","../src/room/errors.ts","../src/e2ee/errors.ts","../node_modules/events/events.js","../src/e2ee/types.ts","../src/room/track/options.ts","../src/e2ee/utils.ts","../src/e2ee/worker/SifGuard.ts","../src/e2ee/worker/FrameCryptor.ts","../src/e2ee/worker/ParticipantKeyHandler.ts","../src/e2ee/worker/e2ee.worker.ts"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import * as log from 'loglevel';\n\nexport enum LogLevel {\n  trace = 0,\n  debug = 1,\n  info = 2,\n  warn = 3,\n  error = 4,\n  silent = 5,\n}\n\ntype LogLevelString = keyof typeof LogLevel;\n\ntype StructuredLogger = {\n  trace: (msg: string, context?: object) => void;\n  debug: (msg: string, context?: object) => void;\n  info: (msg: string, context?: object) => void;\n  warn: (msg: string, context?: object) => void;\n  error: (msg: string, context?: object) => void;\n  setDefaultLevel: (level: log.LogLevelDesc) => void;\n};\n\nconst livekitLogger = log.getLogger('livekit');\n\nlivekitLogger.setDefaultLevel(LogLevel.info);\n\nexport default livekitLogger as StructuredLogger;\n\nexport function setLogLevel(level: LogLevel | LogLevelString, loggerName?: 'livekit' | 'lk-e2ee') {\n  if (loggerName) {\n    log.getLogger(loggerName).setLevel(level);\n  }\n  for (const logger of Object.values(log.getLoggers())) {\n    logger.setLevel(level);\n  }\n}\n\nexport type LogExtension = (level: LogLevel, msg: string, context?: object) => void;\n\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nexport function setLogExtension(extension: LogExtension) {\n  const originalFactory = livekitLogger.methodFactory;\n\n  livekitLogger.methodFactory = (methodName, configLevel, loggerName) => {\n    const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n    const logLevel = LogLevel[methodName as LogLevelString];\n    const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n\n    return (msg, context?: [msg: string, context: object]) => {\n      if (context) rawMethod(msg, context);\n      else rawMethod(msg);\n      if (needLog) {\n        extension(logLevel, msg, context);\n      }\n    };\n  };\n  livekitLogger.setLevel(livekitLogger.getLevel()); // Be sure to call setLevel method in order to apply plugin\n}\n\nexport const workerLogger = log.getLogger('lk-e2ee') as StructuredLogger;\n","import type { KeyProviderOptions } from './types';\n\nexport const ENCRYPTION_ALGORITHM = 'AES-GCM';\n\n// We use a ringbuffer of keys so we can change them and still decode packets that were\n// encrypted with an old key. We use a size of 16 which corresponds to the four bits\n// in the frame trailer.\nexport const KEYRING_SIZE = 16;\n\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nexport const DECRYPTION_FAILURE_TOLERANCE = 10;\n\n// We copy the first bytes of the VP8 payload unencrypted.\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\n//   https://tools.ietf.org/html/rfc6386#section-9.1\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\n// instead of being unable to decode).\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\n//\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\n//   https://tools.ietf.org/html/rfc6716#section-3.1\nexport const UNENCRYPTED_BYTES = {\n  key: 10,\n  delta: 3,\n  audio: 1, // frame.type is not set on audio, so this is set manually\n  empty: 0,\n} as const;\n\n/* We use a 12 byte bit IV. This is signalled in plain together with the\n packet. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters */\nexport const IV_LENGTH = 12;\n\n// flag set to indicate that e2ee has been setup for sender/receiver;\nexport const E2EE_FLAG = 'lk_e2ee';\n\nexport const SALT = 'LKFrameEncryptionKey';\n\nexport const KEY_PROVIDER_DEFAULTS: KeyProviderOptions = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n} as const;\n\nexport const MAX_SIF_COUNT = 100;\nexport const MAX_SIF_DURATION = 2000;\n","export class LivekitError extends Error {\n  code: number;\n\n  constructor(code: number, message?: string) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\n\nexport const enum ConnectionErrorReason {\n  NotAllowed,\n  ServerUnreachable,\n  InternalError,\n  Cancelled,\n}\n\nexport class ConnectionError extends LivekitError {\n  status?: number;\n\n  reason?: ConnectionErrorReason;\n\n  constructor(message?: string, reason?: ConnectionErrorReason, status?: number) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n  }\n}\n\nexport class DeviceUnsupportedError extends LivekitError {\n  constructor(message?: string) {\n    super(21, message ?? 'device is unsupported');\n  }\n}\n\nexport class TrackInvalidError extends LivekitError {\n  constructor(message?: string) {\n    super(20, message ?? 'track is invalid');\n  }\n}\n\nexport class UnsupportedServer extends LivekitError {\n  constructor(message?: string) {\n    super(10, message ?? 'unsupported server');\n  }\n}\n\nexport class UnexpectedConnectionState extends LivekitError {\n  constructor(message?: string) {\n    super(12, message ?? 'unexpected connection state');\n  }\n}\n\nexport class NegotiationError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to negotiate');\n  }\n}\n\nexport class PublishDataError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to publish data');\n  }\n}\n\nexport enum MediaDeviceFailure {\n  // user rejected permissions\n  PermissionDenied = 'PermissionDenied',\n  // device is not available\n  NotFound = 'NotFound',\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  DeviceInUse = 'DeviceInUse',\n  Other = 'Other',\n}\n\nexport namespace MediaDeviceFailure {\n  export function getFailure(error: any): MediaDeviceFailure | undefined {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n}\n","import { LivekitError } from '../room/errors';\n\nexport enum CryptorErrorReason {\n  InvalidKey = 0,\n  MissingKey = 1,\n  InternalError = 2,\n}\n\nexport class CryptorError extends LivekitError {\n  reason: CryptorErrorReason;\n\n  constructor(message?: string, reason: CryptorErrorReason = CryptorErrorReason.InternalError) {\n    super(40, message);\n    this.reason = reason;\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import type Participant from '../room/participant/Participant';\nimport type { VideoCodec } from '../room/track/options';\nimport type { BaseKeyProvider } from './KeyProvider';\nimport type { CryptorError } from './errors';\n\nexport interface BaseMessage {\n  kind: string;\n  data?: unknown;\n}\n\nexport interface InitMessage extends BaseMessage {\n  kind: 'init';\n  data: {\n    keyProviderOptions: KeyProviderOptions;\n  };\n}\n\nexport interface SetKeyMessage extends BaseMessage {\n  kind: 'setKey';\n  data: {\n    participantId?: string;\n    key: CryptoKey;\n    keyIndex?: number;\n  };\n}\n\nexport interface RTPVideoMapMessage extends BaseMessage {\n  kind: 'setRTPMap';\n  data: {\n    map: Map<number, VideoCodec>;\n  };\n}\n\nexport interface SifTrailerMessage extends BaseMessage {\n  kind: 'setSifTrailer';\n  data: {\n    trailer: Uint8Array;\n  };\n}\n\nexport interface EncodeMessage extends BaseMessage {\n  kind: 'decode' | 'encode';\n  data: {\n    participantId: string;\n    readableStream: ReadableStream;\n    writableStream: WritableStream;\n    trackId: string;\n    codec?: VideoCodec;\n  };\n}\n\nexport interface RemoveTransformMessage extends BaseMessage {\n  kind: 'removeTransform';\n  data: {\n    participantId: string;\n    trackId: string;\n  };\n}\n\nexport interface UpdateCodecMessage extends BaseMessage {\n  kind: 'updateCodec';\n  data: {\n    participantId: string;\n    trackId: string;\n    codec: VideoCodec;\n  };\n}\n\nexport interface RatchetRequestMessage extends BaseMessage {\n  kind: 'ratchetRequest';\n  data: {\n    participantId: string | undefined;\n    keyIndex?: number;\n  };\n}\n\nexport interface RatchetMessage extends BaseMessage {\n  kind: 'ratchetKey';\n  data: {\n    // participantId: string | undefined;\n    keyIndex?: number;\n    material: CryptoKey;\n  };\n}\n\nexport interface ErrorMessage extends BaseMessage {\n  kind: 'error';\n  data: {\n    error: Error;\n  };\n}\n\nexport interface EnableMessage extends BaseMessage {\n  kind: 'enable';\n  data: {\n    // if no participant id is set it indicates publisher encryption enable/disable\n    participantId?: string;\n    enabled: boolean;\n  };\n}\n\nexport type E2EEWorkerMessage =\n  | InitMessage\n  | SetKeyMessage\n  | EncodeMessage\n  | ErrorMessage\n  | EnableMessage\n  | RemoveTransformMessage\n  | RTPVideoMapMessage\n  | UpdateCodecMessage\n  | RatchetRequestMessage\n  | RatchetMessage\n  | SifTrailerMessage;\n\nexport type KeySet = { material: CryptoKey; encryptionKey: CryptoKey };\n\nexport type KeyProviderOptions = {\n  sharedKey: boolean;\n  ratchetSalt: string;\n  ratchetWindowSize: number;\n  failureTolerance: number;\n};\n\nexport type KeyProviderCallbacks = {\n  setKey: (keyInfo: KeyInfo) => void;\n  ratchetRequest: (participantId?: string, keyIndex?: number) => void;\n  /** currently only emitted for local participant */\n  keyRatcheted: (material: CryptoKey, keyIndex?: number) => void;\n};\n\nexport type ParticipantKeyHandlerCallbacks = {\n  keyRatcheted: (material: CryptoKey, keyIndex?: number, participantId?: string) => void;\n};\n\nexport type E2EEManagerCallbacks = {\n  participantEncryptionStatusChanged: (enabled: boolean, participant?: Participant) => void;\n  encryptionError: (error: Error) => void;\n};\n\nexport const EncryptionEvent = {\n  ParticipantEncryptionStatusChanged: 'participantEncryptionStatusChanged',\n  Error: 'encryptionError',\n} as const;\n\nexport type CryptorCallbacks = {\n  cryptorError: (error: CryptorError) => void;\n};\n\nexport const CryptorEvent = {\n  Error: 'cryptorError',\n} as const;\n\nexport type KeyInfo = {\n  key: CryptoKey;\n  participantId?: string;\n  keyIndex?: number;\n};\n\nexport type E2EEOptions = {\n  keyProvider: BaseKeyProvider;\n  worker: Worker;\n};\n\nexport type DecodeRatchetOptions = {\n  /** attempts  */\n  ratchetCount: number;\n  /** ratcheted key to try */\n  encryptionKey?: CryptoKey;\n};\n","import type { Track } from './Track';\n\nexport interface TrackPublishDefaults {\n  /**\n   * encoding parameters for camera track\n   */\n  videoEncoding?: VideoEncoding;\n\n  /**\n   * @experimental\n   */\n  backupCodec?: { codec: BackupVideoCodec; encoding: VideoEncoding } | false;\n\n  /**\n   * encoding parameters for screen share track\n   */\n  screenShareEncoding?: VideoEncoding;\n\n  /**\n   * codec, defaults to vp8; for svc codecs, auto enable vp8\n   * as backup. (TBD)\n   */\n  videoCodec?: VideoCodec;\n\n  /**\n   * max audio bitrate, defaults to [[AudioPresets.music]]\n   * @deprecated use `audioPreset` instead\n   */\n  audioBitrate?: number;\n\n  /**\n   * which audio preset should be used for publishing (audio) tracks\n   * defaults to [[AudioPresets.music]]\n   */\n  audioPreset?: AudioPreset;\n\n  /**\n   * dtx (Discontinuous Transmission of audio), enabled by default for mono tracks.\n   */\n  dtx?: boolean;\n\n  /**\n   * red (Redundant Audio Data), enabled by default for mono tracks.\n   */\n  red?: boolean;\n\n  /**\n   * publish track in stereo mode (or set to false to disable). defaults determined by capture channel count.\n   */\n  forceStereo?: boolean;\n\n  /**\n   * use simulcast, defaults to true.\n   * When using simulcast, LiveKit will publish up to three versions of the stream\n   * at various resolutions.\n   */\n  simulcast?: boolean;\n\n  /**\n   * scalability mode for svc codecs, defaults to 'L3T3'.\n   * for svc codecs, simulcast is disabled.\n   */\n  scalabilityMode?: ScalabilityMode;\n\n  /**\n   * Up to two additional simulcast layers to publish in addition to the original\n   * Track.\n   * When left blank, it defaults to h180, h360.\n   * If a SVC codec is used (VP9 or AV1), this field has no effect.\n   *\n   * To publish three total layers, you would specify:\n   * {\n   *   videoEncoding: {...}, // encoding of the primary layer\n   *   videoSimulcastLayers: [\n   *     VideoPresets.h540,\n   *     VideoPresets.h216,\n   *   ],\n   * }\n   */\n  videoSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * custom video simulcast layers for screen tracks\n   * Note: the layers need to be ordered from lowest to highest quality\n   */\n  screenShareSimulcastLayers?: Array<VideoPreset>;\n\n  /**\n   * For local tracks, stop the underlying MediaStreamTrack when the track is muted (or paused)\n   * on some platforms, this option is necessary to disable the microphone recording indicator.\n   * Note: when this is enabled, and BT devices are connected, they will transition between\n   * profiles (e.g. HFP to A2DP) and there will be an audible difference in playback.\n   *\n   * defaults to false\n   */\n  stopMicTrackOnMute?: boolean;\n}\n\n/**\n * Options when publishing tracks\n */\nexport interface TrackPublishOptions extends TrackPublishDefaults {\n  /**\n   * set a track name\n   */\n  name?: string;\n\n  /**\n   * Source of track, camera, microphone, or screen\n   */\n  source?: Track.Source;\n}\n\nexport interface CreateLocalTracksOptions {\n  /**\n   * audio track options, true to create with defaults. false if audio shouldn't be created\n   * default true\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * video track options, true to create with defaults. false if video shouldn't be created\n   * default true\n   */\n  video?: boolean | VideoCaptureOptions;\n}\n\nexport interface VideoCaptureOptions {\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * a facing or an array of facings which are acceptable and/or required.\n   */\n  facingMode?: 'user' | 'environment' | 'left' | 'right';\n\n  resolution?: VideoResolution;\n}\n\nexport interface ScreenShareCaptureOptions {\n  /**\n   * true to capture audio shared. browser support for audio capturing in\n   * screenshare is limited: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia#browser_compatibility\n   */\n  audio?: boolean | AudioCaptureOptions;\n\n  /**\n   * only allows for 'true' and chrome allows for additional options to be passed in\n   * https://developer.chrome.com/docs/web-platform/screen-sharing-controls/#displaySurface\n   */\n  video?: true | { displaySurface?: 'window' | 'browser' | 'monitor' };\n\n  /** capture resolution, defaults to full HD */\n  resolution?: VideoResolution;\n\n  /** a CaptureController object instance containing methods that can be used to further manipulate the capture session if included. */\n  controller?: unknown; // TODO replace type with CaptureController once it lands in TypeScript\n\n  /** specifies whether the browser should allow the user to select the current tab for capture */\n  selfBrowserSurface?: 'include' | 'exclude';\n\n  /** specifies whether the browser should display a control to allow the user to dynamically switch the shared tab during screen-sharing. */\n  surfaceSwitching?: 'include' | 'exclude';\n\n  /** specifies whether the browser should include the system audio among the possible audio sources offered to the user */\n  systemAudio?: 'include' | 'exclude';\n\n  /**\n   * Experimental option to control whether the audio playing in a tab will continue to be played out of a user's\n   * local speakers when the tab is captured.\n   */\n  suppressLocalAudioPlayback?: boolean;\n}\n\nexport interface AudioCaptureOptions {\n  /**\n   * specifies whether automatic gain control is preferred and/or required\n   */\n  autoGainControl?: ConstrainBoolean;\n\n  /**\n   * the channel count or range of channel counts which are acceptable and/or required\n   */\n  channelCount?: ConstrainULong;\n\n  /**\n   * A ConstrainDOMString object specifying a device ID or an array of device\n   * IDs which are acceptable and/or required.\n   */\n  deviceId?: ConstrainDOMString;\n\n  /**\n   * whether or not echo cancellation is preferred and/or required\n   */\n  echoCancellation?: ConstrainBoolean;\n\n  /**\n   * the latency or range of latencies which are acceptable and/or required.\n   */\n  latency?: ConstrainDouble;\n\n  /**\n   * whether noise suppression is preferred and/or required.\n   */\n  noiseSuppression?: ConstrainBoolean;\n\n  /**\n   * the sample rate or range of sample rates which are acceptable and/or required.\n   */\n  sampleRate?: ConstrainULong;\n\n  /**\n   * sample size or range of sample sizes which are acceptable and/or required.\n   */\n  sampleSize?: ConstrainULong;\n}\n\nexport interface AudioOutputOptions {\n  /**\n   * deviceId to output audio\n   *\n   * Only supported on browsers where `setSinkId` is available\n   */\n  deviceId?: string;\n}\n\nexport interface VideoResolution {\n  width: number;\n  height: number;\n  frameRate?: number;\n  aspectRatio?: number;\n}\n\nexport interface VideoEncoding {\n  maxBitrate: number;\n  maxFramerate?: number;\n  priority?: RTCPriorityType;\n}\n\nexport class VideoPreset {\n  encoding: VideoEncoding;\n\n  width: number;\n\n  height: number;\n\n  constructor(\n    width: number,\n    height: number,\n    maxBitrate: number,\n    maxFramerate?: number,\n    priority?: RTCPriorityType,\n  ) {\n    this.width = width;\n    this.height = height;\n    this.encoding = {\n      maxBitrate,\n      maxFramerate,\n      priority,\n    };\n  }\n\n  get resolution(): VideoResolution {\n    return {\n      width: this.width,\n      height: this.height,\n      frameRate: this.encoding.maxFramerate,\n      aspectRatio: this.width / this.height,\n    };\n  }\n}\n\nexport interface AudioPreset {\n  maxBitrate: number;\n  priority?: RTCPriorityType;\n}\n\nconst backupCodecs = ['vp8', 'h264'] as const;\n\nexport const videoCodecs = ['vp8', 'h264', 'vp9', 'av1'] as const;\n\nexport type VideoCodec = (typeof videoCodecs)[number];\n\nexport type BackupVideoCodec = (typeof backupCodecs)[number];\n\nexport function isBackupCodec(codec: string): codec is BackupVideoCodec {\n  return !!backupCodecs.find((backup) => backup === codec);\n}\n\nexport function isCodecEqual(c1: string | undefined, c2: string | undefined): boolean {\n  return (\n    c1?.toLowerCase().replace(/audio\\/|video\\//y, '') ===\n    c2?.toLowerCase().replace(/audio\\/|video\\//y, '')\n  );\n}\n\n/**\n * scalability modes for svc, only supprot l3t3 now.\n */\nexport type ScalabilityMode = 'L3T3' | 'L3T3_KEY';\n\nexport namespace AudioPresets {\n  export const telephone: AudioPreset = {\n    maxBitrate: 12_000,\n  };\n  export const speech: AudioPreset = {\n    maxBitrate: 20_000,\n  };\n  export const music: AudioPreset = {\n    maxBitrate: 32_000,\n  };\n  export const musicStereo: AudioPreset = {\n    maxBitrate: 48_000,\n  };\n  export const musicHighQuality: AudioPreset = {\n    maxBitrate: 64_000,\n  };\n  export const musicHighQualityStereo: AudioPreset = {\n    maxBitrate: 96_000,\n  };\n}\n\n/**\n * Sane presets for video resolution/encoding\n */\nexport const VideoPresets = {\n  h90: new VideoPreset(160, 90, 90_000, 20),\n  h180: new VideoPreset(320, 180, 160_000, 20),\n  h216: new VideoPreset(384, 216, 180_000, 20),\n  h360: new VideoPreset(640, 360, 450_000, 20),\n  h540: new VideoPreset(960, 540, 800_000, 25),\n  h720: new VideoPreset(1280, 720, 1_700_000, 30),\n  h1080: new VideoPreset(1920, 1080, 3_000_000, 30),\n  h1440: new VideoPreset(2560, 1440, 5_000_000, 30),\n  h2160: new VideoPreset(3840, 2160, 8_000_000, 30),\n} as const;\n\n/**\n * Four by three presets\n */\nexport const VideoPresets43 = {\n  h120: new VideoPreset(160, 120, 70_000, 20),\n  h180: new VideoPreset(240, 180, 125_000, 20),\n  h240: new VideoPreset(320, 240, 140_000, 20),\n  h360: new VideoPreset(480, 360, 225_000, 20),\n  h480: new VideoPreset(640, 480, 500_000, 20),\n  h540: new VideoPreset(720, 540, 600_000, 25),\n  h720: new VideoPreset(960, 720, 1_300_000, 30),\n  h1080: new VideoPreset(1440, 1080, 2_300_000, 30),\n  h1440: new VideoPreset(1920, 1440, 3_800_000, 30),\n} as const;\n\nexport const ScreenSharePresets = {\n  h360fps3: new VideoPreset(640, 360, 200_000, 3, 'medium'),\n  h720fps5: new VideoPreset(1280, 720, 400_000, 5, 'medium'),\n  h720fps15: new VideoPreset(1280, 720, 1_500_000, 15, 'medium'),\n  h720fps30: new VideoPreset(1280, 720, 2_000_000, 30, 'medium'),\n  h1080fps15: new VideoPreset(1920, 1080, 2_500_000, 15, 'medium'),\n  h1080fps30: new VideoPreset(1920, 1080, 4_000_000, 30, 'medium'),\n} as const;\n","import { videoCodecs } from '../room/track/options';\nimport type { VideoCodec } from '../room/track/options';\nimport { ENCRYPTION_ALGORITHM } from './constants';\n\nexport function isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\n\nexport function isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\n\nexport function isInsertableStreamSupported() {\n  return (\n    typeof window.RTCRtpSender !== 'undefined' &&\n    // @ts-ignore\n    typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined'\n  );\n}\n\nexport function isVideoFrame(\n  frame: RTCEncodedAudioFrame | RTCEncodedVideoFrame,\n): frame is RTCEncodedVideoFrame {\n  return 'type' in frame;\n}\n\nexport async function importKey(\n  keyBytes: Uint8Array | ArrayBuffer,\n  algorithm: string | { name: string } = { name: ENCRYPTION_ALGORITHM },\n  usage: 'derive' | 'encrypt' = 'encrypt',\n) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  return crypto.subtle.importKey(\n    'raw',\n    keyBytes,\n    algorithm,\n    false,\n    usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt'],\n  );\n}\n\nexport async function createKeyMaterialFromString(password: string) {\n  let enc = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    {\n      name: 'PBKDF2',\n    },\n    false,\n    ['deriveBits', 'deriveKey'],\n  );\n\n  return keyMaterial;\n}\n\nexport async function createKeyMaterialFromBuffer(cryptoBuffer: ArrayBuffer) {\n  const keyMaterial = await crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, [\n    'deriveBits',\n    'deriveKey',\n  ]);\n\n  return keyMaterial;\n}\n\nfunction getAlgoOptions(algorithmName: string, salt: string) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128),\n      };\n    case 'PBKDF2': {\n      return {\n        name: 'PBKDF2',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        iterations: 100000,\n      };\n    }\n    default:\n      throw new Error(`algorithm ${algorithmName} is currently unsupported`);\n  }\n}\n\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material: CryptoKey, salt: string) {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n  // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n  const encryptionKey = await crypto.subtle.deriveKey(\n    algorithmOptions,\n    material,\n    {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128,\n    },\n    false,\n    ['encrypt', 'decrypt'],\n  );\n\n  return { material, encryptionKey };\n}\n\nexport function createE2EEKey(): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n\nexport function mimeTypeToVideoCodecString(mimeType: string) {\n  const codec = mimeType.split('/')[1].toLowerCase() as VideoCodec;\n  if (!videoCodecs.includes(codec)) {\n    throw Error(`Video codec not supported: ${codec}`);\n  }\n  return codec;\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nexport async function ratchet(material: CryptoKey, salt: string): Promise<ArrayBuffer> {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n  return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n}\n","import { MAX_SIF_COUNT, MAX_SIF_DURATION } from '../constants';\n\nexport class SifGuard {\n  private consecutiveSifCount = 0;\n\n  private sifSequenceStartedAt: number | undefined;\n\n  private lastSifReceivedAt: number = 0;\n\n  private userFramesSinceSif: number = 0;\n\n  recordSif() {\n    this.consecutiveSifCount += 1;\n    this.sifSequenceStartedAt ??= Date.now();\n    this.lastSifReceivedAt = Date.now();\n  }\n\n  recordUserFrame() {\n    if (this.sifSequenceStartedAt === undefined) {\n      return;\n    } else {\n      this.userFramesSinceSif += 1;\n    }\n    if (\n      // reset if we received more user frames than SIFs\n      this.userFramesSinceSif > this.consecutiveSifCount ||\n      // also reset if we got a new user frame and the latest SIF frame hasn't been updated in a while\n      Date.now() - this.lastSifReceivedAt > MAX_SIF_DURATION\n    ) {\n      this.reset();\n    }\n  }\n\n  isSifAllowed() {\n    return (\n      this.consecutiveSifCount < MAX_SIF_COUNT &&\n      (this.sifSequenceStartedAt === undefined ||\n        Date.now() - this.sifSequenceStartedAt < MAX_SIF_DURATION)\n    );\n  }\n\n  reset() {\n    this.userFramesSinceSif = 0;\n    this.consecutiveSifCount = 0;\n    this.sifSequenceStartedAt = undefined;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n// TODO code inspired by https://github.com/webrtc/samples/blob/gh-pages/src/content/insertable-streams/endtoend-encryption/js/worker.js\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport type { VideoCodec } from '../../room/track/options';\nimport { ENCRYPTION_ALGORITHM, IV_LENGTH, UNENCRYPTED_BYTES } from '../constants';\nimport { CryptorError, CryptorErrorReason } from '../errors';\nimport {\n  CryptorCallbacks,\n  CryptorEvent,\n  DecodeRatchetOptions,\n  KeyProviderOptions,\n  KeySet,\n} from '../types';\nimport { deriveKeys, isVideoFrame } from '../utils';\nimport type { ParticipantKeyHandler } from './ParticipantKeyHandler';\nimport { SifGuard } from './SifGuard';\n\nexport interface FrameCryptorConstructor {\n  new (opts?: unknown): BaseFrameCryptor;\n}\n\nexport interface TransformerInfo {\n  readable: ReadableStream;\n  writable: WritableStream;\n  transformer: TransformStream;\n  abortController: AbortController;\n}\n\nexport class BaseFrameCryptor extends (EventEmitter as new () => TypedEventEmitter<CryptorCallbacks>) {\n  encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n\n  decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n}\n\n/**\n * Cryptor is responsible for en-/decrypting media frames.\n * Each Cryptor instance is responsible for en-/decrypting a single mediaStreamTrack.\n */\nexport class FrameCryptor extends BaseFrameCryptor {\n  private sendCounts: Map<number, number>;\n\n  private participantId: string | undefined;\n\n  private trackId: string | undefined;\n\n  private keys: ParticipantKeyHandler;\n\n  private videoCodec?: VideoCodec;\n\n  private rtpMap: Map<number, VideoCodec>;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  /**\n   * used for detecting server injected unencrypted frames\n   */\n  private sifTrailer: Uint8Array;\n\n  private sifGuard: SifGuard;\n\n  constructor(opts: {\n    keys: ParticipantKeyHandler;\n    participantId: string;\n    keyProviderOptions: KeyProviderOptions;\n    sifTrailer?: Uint8Array;\n  }) {\n    super();\n    this.sendCounts = new Map();\n    this.keys = opts.keys;\n    this.participantId = opts.participantId;\n    this.rtpMap = new Map();\n    this.keyProviderOptions = opts.keyProviderOptions;\n    this.sifTrailer = opts.sifTrailer ?? Uint8Array.from([]);\n    this.sifGuard = new SifGuard();\n  }\n\n  /**\n   * Assign a different participant to the cryptor.\n   * useful for transceiver re-use\n   * @param id\n   * @param keys\n   */\n  setParticipant(id: string, keys: ParticipantKeyHandler) {\n    this.participantId = id;\n    this.keys = keys;\n    this.sifGuard.reset();\n  }\n\n  unsetParticipant() {\n    this.participantId = undefined;\n  }\n\n  getParticipantId() {\n    return this.participantId;\n  }\n\n  getTrackId() {\n    return this.trackId;\n  }\n\n  /**\n   * Update the video codec used by the mediaStreamTrack\n   * @param codec\n   */\n  setVideoCodec(codec: VideoCodec) {\n    this.videoCodec = codec;\n  }\n\n  /**\n   * rtp payload type map used for figuring out codec of payload type when encoding\n   * @param map\n   */\n  setRtpMap(map: Map<number, VideoCodec>) {\n    this.rtpMap = map;\n  }\n\n  setupTransform(\n    operation: 'encode' | 'decode',\n    readable: ReadableStream,\n    writable: WritableStream,\n    trackId: string,\n    codec?: VideoCodec,\n  ) {\n    if (codec) {\n      workerLogger.info('setting codec on cryptor to', { codec });\n      this.videoCodec = codec;\n    }\n\n    const transformFn = operation === 'encode' ? this.encodeFunction : this.decodeFunction;\n    const transformStream = new TransformStream({\n      transform: transformFn.bind(this),\n    });\n\n    readable\n      .pipeThrough(transformStream)\n      .pipeTo(writable)\n      .catch((e) => {\n        workerLogger.warn(e);\n        this.emit('cryptorError', e instanceof CryptorError ? e : new CryptorError(e.message));\n      });\n    this.trackId = trackId;\n  }\n\n  /**\n   * Function that will be injected in a stream and will encrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   *\n   * The VP8 payload descriptor described in\n   * https://tools.ietf.org/html/rfc7741#section-4.2\n   * is part of the RTP packet and not part of the frame and is not controllable by us.\n   * This is fine as the SFU keeps having access to it for routing.\n   *\n   * The encrypted frame is formed as follows:\n   * 1) Find unencrypted byte length, depending on the codec, frame type and kind.\n   * 2) Form the GCM IV for the frame as described above.\n   * 3) Encrypt the rest of the frame using AES-GCM.\n   * 4) Allocate space for the encrypted frame.\n   * 5) Copy the unencrypted bytes to the start of the encrypted frame.\n   * 6) Append the ciphertext to the encrypted frame.\n   * 7) Append the IV.\n   * 8) Append a single byte for the key identifier.\n   * 9) Enqueue the encrypted frame for sending.\n   */\n  async encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.keys.isEnabled() ||\n      // skip for encryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      return controller.enqueue(encodedFrame);\n    }\n\n    const { encryptionKey } = this.keys.getKeySet();\n    const keyIndex = this.keys.getCurrentKeyIndex();\n\n    if (encryptionKey) {\n      const iv = this.makeIV(\n        encodedFrame.getMetadata().synchronizationSource ?? -1,\n        encodedFrame.timestamp,\n      );\n\n      // Thіs is not encrypted and contains the VP8 payload descriptor or the Opus TOC byte.\n      const frameHeader = new Uint8Array(\n        encodedFrame.data,\n        0,\n        this.getUnencryptedBytes(encodedFrame),\n      );\n\n      // Frame trailer contains the R|IV_LENGTH and key index\n      const frameTrailer = new Uint8Array(2);\n\n      frameTrailer[0] = IV_LENGTH;\n      frameTrailer[1] = keyIndex;\n\n      // Construct frame trailer. Similar to the frame header described in\n      // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n      // but we put it at the end.\n      //\n      // ---------+-------------------------+-+---------+----\n      // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n      // ---------+-------------------------+-+---------+----\n      try {\n        const cipherText = await crypto.subtle.encrypt(\n          {\n            name: ENCRYPTION_ALGORITHM,\n            iv,\n            additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n          },\n          encryptionKey,\n          new Uint8Array(encodedFrame.data, this.getUnencryptedBytes(encodedFrame)),\n        );\n\n        const newData = new ArrayBuffer(\n          frameHeader.byteLength + cipherText.byteLength + iv.byteLength + frameTrailer.byteLength,\n        );\n        const newUint8 = new Uint8Array(newData);\n\n        newUint8.set(frameHeader); // copy first bytes.\n        newUint8.set(new Uint8Array(cipherText), frameHeader.byteLength); // add ciphertext.\n        newUint8.set(new Uint8Array(iv), frameHeader.byteLength + cipherText.byteLength); // append IV.\n        newUint8.set(frameTrailer, frameHeader.byteLength + cipherText.byteLength + iv.byteLength); // append frame trailer.\n\n        encodedFrame.data = newData;\n\n        return controller.enqueue(encodedFrame);\n      } catch (e: any) {\n        // TODO: surface this to the app.\n        workerLogger.error(e);\n      }\n    } else {\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(`encryption key missing for encoding`, CryptorErrorReason.MissingKey),\n      );\n    }\n  }\n\n  /**\n   * Function that will be injected in a stream and will decrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   */\n  async decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.keys.isEnabled() ||\n      // skip for decryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      this.sifGuard.recordUserFrame();\n      return controller.enqueue(encodedFrame);\n    }\n\n    if (isFrameServerInjected(encodedFrame.data, this.sifTrailer)) {\n      this.sifGuard.recordSif();\n\n      if (this.sifGuard.isSifAllowed()) {\n        return controller.enqueue(encodedFrame);\n      } else {\n        workerLogger.warn('SIF limit reached, dropping frame');\n        return;\n      }\n    } else {\n      this.sifGuard.recordUserFrame();\n    }\n    const data = new Uint8Array(encodedFrame.data);\n    const keyIndex = data[encodedFrame.data.byteLength - 1];\n\n    if (this.keys.getKeySet(keyIndex) && this.keys.hasValidKey) {\n      try {\n        const decodedFrame = await this.decryptFrame(encodedFrame, keyIndex);\n        this.keys.decryptionSuccess();\n        if (decodedFrame) {\n          return controller.enqueue(decodedFrame);\n        }\n      } catch (error) {\n        if (error instanceof CryptorError && error.reason === CryptorErrorReason.InvalidKey) {\n          if (this.keys.hasValidKey) {\n            workerLogger.warn('invalid key');\n            this.emit(\n              CryptorEvent.Error,\n              new CryptorError(\n                `invalid key for participant ${this.participantId}`,\n                CryptorErrorReason.InvalidKey,\n              ),\n            );\n            this.keys.decryptionFailure();\n          }\n        } else {\n          workerLogger.warn('decoding frame failed', { error });\n        }\n      }\n    } else if (!this.keys.getKeySet(keyIndex) && this.keys.hasValidKey) {\n      // emit an error in case the key index is out of bounds but the key handler thinks we still have a valid key\n      workerLogger.warn('skipping decryption due to missing key at index');\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(\n          `missing key at index for participant ${this.participantId}`,\n          CryptorErrorReason.MissingKey,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Function that will decrypt the given encoded frame. If the decryption fails, it will\n   * ratchet the key for up to RATCHET_WINDOW_SIZE times.\n   */\n  async decryptFrame(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    keyIndex: number,\n    initialMaterial: KeySet | undefined = undefined,\n    ratchetOpts: DecodeRatchetOptions = { ratchetCount: 0 },\n  ): Promise<RTCEncodedVideoFrame | RTCEncodedAudioFrame | undefined> {\n    const keySet = this.keys.getKeySet(keyIndex);\n\n    // Construct frame trailer. Similar to the frame header described in\n    // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n    // but we put it at the end.\n    //\n    // ---------+-------------------------+-+---------+----\n    // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n    // ---------+-------------------------+-+---------+----\n\n    try {\n      const frameHeader = new Uint8Array(\n        encodedFrame.data,\n        0,\n        this.getUnencryptedBytes(encodedFrame),\n      );\n      const frameTrailer = new Uint8Array(encodedFrame.data, encodedFrame.data.byteLength - 2, 2);\n\n      const ivLength = frameTrailer[0];\n      const iv = new Uint8Array(\n        encodedFrame.data,\n        encodedFrame.data.byteLength - ivLength - frameTrailer.byteLength,\n        ivLength,\n      );\n\n      const cipherTextStart = frameHeader.byteLength;\n      const cipherTextLength =\n        encodedFrame.data.byteLength -\n        (frameHeader.byteLength + ivLength + frameTrailer.byteLength);\n\n      const plainText = await crypto.subtle.decrypt(\n        {\n          name: ENCRYPTION_ALGORITHM,\n          iv,\n          additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n        },\n        ratchetOpts.encryptionKey ?? keySet.encryptionKey,\n        new Uint8Array(encodedFrame.data, cipherTextStart, cipherTextLength),\n      );\n\n      const newData = new ArrayBuffer(frameHeader.byteLength + plainText.byteLength);\n      const newUint8 = new Uint8Array(newData);\n\n      newUint8.set(new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength));\n      newUint8.set(new Uint8Array(plainText), frameHeader.byteLength);\n\n      encodedFrame.data = newData;\n\n      return encodedFrame;\n    } catch (error: any) {\n      if (this.keyProviderOptions.ratchetWindowSize > 0) {\n        if (ratchetOpts.ratchetCount < this.keyProviderOptions.ratchetWindowSize) {\n          workerLogger.debug(\n            `ratcheting key attempt ${ratchetOpts.ratchetCount} of ${\n              this.keyProviderOptions.ratchetWindowSize\n            }, for kind ${encodedFrame instanceof RTCEncodedAudioFrame ? 'audio' : 'video'}`,\n          );\n\n          let ratchetedKeySet: KeySet | undefined;\n          if (keySet === this.keys.getKeySet(keyIndex)) {\n            // only ratchet if the currently set key is still the same as the one used to decrypt this frame\n            // if not, it might be that a different frame has already ratcheted and we try with that one first\n            const newMaterial = await this.keys.ratchetKey(keyIndex, false);\n\n            ratchetedKeySet = await deriveKeys(newMaterial, this.keyProviderOptions.ratchetSalt);\n          }\n\n          const frame = await this.decryptFrame(encodedFrame, keyIndex, initialMaterial || keySet, {\n            ratchetCount: ratchetOpts.ratchetCount + 1,\n            encryptionKey: ratchetedKeySet?.encryptionKey,\n          });\n          if (frame && ratchetedKeySet) {\n            this.keys.setKeySet(ratchetedKeySet, keyIndex, true);\n            // decryption was successful, set the new key index to reflect the ratcheted key set\n            this.keys.setCurrentKeyIndex(keyIndex);\n          }\n          return frame;\n        } else {\n          /**\n           * Since the key it is first send and only afterwards actually used for encrypting, there were\n           * situations when the decrypting failed due to the fact that the received frame was not encrypted\n           * yet and ratcheting, of course, did not solve the problem. So if we fail RATCHET_WINDOW_SIZE times,\n           * we come back to the initial key.\n           */\n          if (initialMaterial) {\n            workerLogger.debug('resetting to initial material');\n            this.keys.setKeyFromMaterial(initialMaterial.material, keyIndex);\n          }\n\n          workerLogger.warn('maximum ratchet attempts exceeded, resetting key');\n          throw new CryptorError(\n            `valid key missing for participant ${this.participantId}`,\n            CryptorErrorReason.InvalidKey,\n          );\n        }\n      } else {\n        throw new CryptorError(\n          'Decryption failed, most likely because of an invalid key',\n          CryptorErrorReason.InvalidKey,\n        );\n      }\n    }\n  }\n\n  /**\n   * Construct the IV used for AES-GCM and sent (in plain) with the packet similar to\n   * https://tools.ietf.org/html/rfc7714#section-8.1\n   * It concatenates\n   * - the 32 bit synchronization source (SSRC) given on the encoded frame,\n   * - the 32 bit rtp timestamp given on the encoded frame,\n   * - a send counter that is specific to the SSRC. Starts at a random number.\n   * The send counter is essentially the pictureId but we currently have to implement this ourselves.\n   * There is no XOR with a salt. Note that this IV leaks the SSRC to the receiver but since this is\n   * randomly generated and SFUs may not rewrite this is considered acceptable.\n   * The SSRC is used to allow demultiplexing multiple streams with the same key, as described in\n   *   https://tools.ietf.org/html/rfc3711#section-4.1.1\n   * The RTP timestamp is 32 bits and advances by the codec clock rate (90khz for video, 48khz for\n   * opus audio) every second. For video it rolls over roughly every 13 hours.\n   * The send counter will advance at the frame rate (30fps for video, 50fps for 20ms opus audio)\n   * every second. It will take a long time to roll over.\n   *\n   * See also https://developer.mozilla.org/en-US/docs/Web/API/AesGcmParams\n   */\n  private makeIV(synchronizationSource: number, timestamp: number) {\n    const iv = new ArrayBuffer(IV_LENGTH);\n    const ivView = new DataView(iv);\n\n    // having to keep our own send count (similar to a picture id) is not ideal.\n    if (!this.sendCounts.has(synchronizationSource)) {\n      // Initialize with a random offset, similar to the RTP sequence number.\n      this.sendCounts.set(synchronizationSource, Math.floor(Math.random() * 0xffff));\n    }\n\n    const sendCount = this.sendCounts.get(synchronizationSource) ?? 0;\n\n    ivView.setUint32(0, synchronizationSource);\n    ivView.setUint32(4, timestamp);\n    ivView.setUint32(8, timestamp - (sendCount % 0xffff));\n\n    this.sendCounts.set(synchronizationSource, sendCount + 1);\n\n    return iv;\n  }\n\n  getUnencryptedBytes(frame: RTCEncodedVideoFrame | RTCEncodedAudioFrame): number {\n    if (isVideoFrame(frame)) {\n      let detectedCodec = this.getVideoCodec(frame) ?? this.videoCodec;\n\n      if (detectedCodec === 'av1' || detectedCodec === 'vp9') {\n        throw new Error(`${detectedCodec} is not yet supported for end to end encryption`);\n      }\n\n      if (detectedCodec === 'vp8') {\n        return UNENCRYPTED_BYTES[frame.type];\n      }\n\n      const data = new Uint8Array(frame.data);\n      try {\n        const naluIndices = findNALUIndices(data);\n\n        // if the detected codec is undefined we test whether it _looks_ like a h264 frame as a best guess\n        const isH264 =\n          detectedCodec === 'h264' ||\n          naluIndices.some((naluIndex) =>\n            [NALUType.SLICE_IDR, NALUType.SLICE_NON_IDR].includes(parseNALUType(data[naluIndex])),\n          );\n\n        if (isH264) {\n          for (const index of naluIndices) {\n            let type = parseNALUType(data[index]);\n            switch (type) {\n              case NALUType.SLICE_IDR:\n              case NALUType.SLICE_NON_IDR:\n                return index + 2;\n              default:\n                break;\n            }\n          }\n          throw new TypeError('Could not find NALU');\n        }\n      } catch (e) {\n        // no op, we just continue and fallback to vp8\n      }\n\n      return UNENCRYPTED_BYTES[frame.type];\n    } else {\n      return UNENCRYPTED_BYTES.audio;\n    }\n  }\n\n  /**\n   * inspects frame payloadtype if available and maps it to the codec specified in rtpMap\n   */\n  getVideoCodec(frame: RTCEncodedVideoFrame): VideoCodec | undefined {\n    if (this.rtpMap.size === 0) {\n      return undefined;\n    }\n    // @ts-expect-error payloadType is not yet part of the typescript definition and currently not supported in Safari\n    const payloadType = frame.getMetadata().payloadType;\n    const codec = payloadType ? this.rtpMap.get(payloadType) : undefined;\n    return codec;\n  }\n\n  setSifTrailer(trailer: Uint8Array) {\n    this.sifTrailer = trailer;\n  }\n}\n\n/**\n * Slice the NALUs present in the supplied buffer, assuming it is already byte-aligned\n * code adapted from https://github.com/medooze/h264-frame-parser/blob/main/lib/NalUnits.ts to return indices only\n */\nexport function findNALUIndices(stream: Uint8Array): number[] {\n  const result: number[] = [];\n  let start = 0,\n    pos = 0,\n    searchLength = stream.length - 2;\n  while (pos < searchLength) {\n    // skip until end of current NALU\n    while (\n      pos < searchLength &&\n      !(stream[pos] === 0 && stream[pos + 1] === 0 && stream[pos + 2] === 1)\n    )\n      pos++;\n    if (pos >= searchLength) pos = stream.length;\n    // remove trailing zeros from current NALU\n    let end = pos;\n    while (end > start && stream[end - 1] === 0) end--;\n    // save current NALU\n    if (start === 0) {\n      if (end !== start) throw TypeError('byte stream contains leading data');\n    } else {\n      result.push(start);\n    }\n    // begin new NALU\n    start = pos = pos + 3;\n  }\n  return result;\n}\n\nexport function parseNALUType(startByte: number): NALUType {\n  return startByte & kNaluTypeMask;\n}\n\nconst kNaluTypeMask = 0x1f;\n\nexport enum NALUType {\n  /** Coded slice of a non-IDR picture */\n  SLICE_NON_IDR = 1,\n  /** Coded slice data partition A */\n  SLICE_PARTITION_A = 2,\n  /** Coded slice data partition B */\n  SLICE_PARTITION_B = 3,\n  /** Coded slice data partition C */\n  SLICE_PARTITION_C = 4,\n  /** Coded slice of an IDR picture */\n  SLICE_IDR = 5,\n  /** Supplemental enhancement information */\n  SEI = 6,\n  /** Sequence parameter set */\n  SPS = 7,\n  /** Picture parameter set */\n  PPS = 8,\n  /** Access unit delimiter */\n  AUD = 9,\n  /** End of sequence */\n  END_SEQ = 10,\n  /** End of stream */\n  END_STREAM = 11,\n  /** Filler data */\n  FILLER_DATA = 12,\n  /** Sequence parameter set extension */\n  SPS_EXT = 13,\n  /** Prefix NAL unit */\n  PREFIX_NALU = 14,\n  /** Subset sequence parameter set */\n  SUBSET_SPS = 15,\n  /** Depth parameter set */\n  DPS = 16,\n\n  // 17, 18 reserved\n\n  /** Coded slice of an auxiliary coded picture without partitioning */\n  SLICE_AUX = 19,\n  /** Coded slice extension */\n  SLICE_EXT = 20,\n  /** Coded slice extension for a depth view component or a 3D-AVC texture view component */\n  SLICE_LAYER_EXT = 21,\n\n  // 22, 23 reserved\n}\n\n/**\n * we use a magic frame trailer to detect whether a frame is injected\n * by the livekit server and thus to be treated as unencrypted\n * @internal\n */\nexport function isFrameServerInjected(frameData: ArrayBuffer, trailerBytes: Uint8Array): boolean {\n  if (trailerBytes.byteLength === 0) {\n    return false;\n  }\n  const frameTrailer = new Uint8Array(\n    frameData.slice(frameData.byteLength - trailerBytes.byteLength),\n  );\n  return trailerBytes.every((value, index) => value === frameTrailer[index]);\n}\n","import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport { KEYRING_SIZE } from '../constants';\nimport type { KeyProviderOptions, KeySet, ParticipantKeyHandlerCallbacks } from '../types';\nimport { deriveKeys, importKey, ratchet } from '../utils';\n\n// TODO ParticipantKeyHandlers currently don't get destroyed on participant disconnect\n// we could do this by having a separate worker message on participant disconnected.\n\n/**\n * ParticipantKeyHandler is responsible for providing a cryptor instance with the\n * en-/decryption key of a participant. It assumes that all tracks of a specific participant\n * are encrypted with the same key.\n * Additionally it exposes a method to ratchet a key which can be used by the cryptor either automatically\n * if decryption fails or can be triggered manually on both sender and receiver side.\n *\n */\nexport class ParticipantKeyHandler extends (EventEmitter as new () => TypedEventEmitter<ParticipantKeyHandlerCallbacks>) {\n  private currentKeyIndex: number;\n\n  private cryptoKeyRing: Array<KeySet>;\n\n  private enabled: boolean;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  private ratchetPromiseMap: Map<number, Promise<CryptoKey>>;\n\n  private participantId: string | undefined;\n\n  private decryptionFailureCount = 0;\n\n  private _hasValidKey: boolean = true;\n\n  get hasValidKey() {\n    return this._hasValidKey;\n  }\n\n  constructor(\n    participantId: string | undefined,\n    isEnabled: boolean,\n    keyProviderOptions: KeyProviderOptions,\n  ) {\n    super();\n    this.currentKeyIndex = 0;\n    this.cryptoKeyRing = new Array(KEYRING_SIZE);\n    this.enabled = isEnabled;\n    this.keyProviderOptions = keyProviderOptions;\n    this.ratchetPromiseMap = new Map();\n    this.participantId = participantId;\n    this.resetKeyStatus();\n  }\n\n  setEnabled(enabled: boolean) {\n    this.enabled = enabled;\n  }\n\n  decryptionFailure() {\n    if (this.keyProviderOptions.failureTolerance < 0) {\n      return;\n    }\n    this.decryptionFailureCount += 1;\n\n    if (this.decryptionFailureCount > this.keyProviderOptions.failureTolerance) {\n      workerLogger.warn(`key for ${this.participantId} is being marked as invalid`);\n      this._hasValidKey = false;\n    }\n  }\n\n  decryptionSuccess() {\n    this.resetKeyStatus();\n  }\n\n  /**\n   * Call this after user initiated ratchet or a new key has been set in order to make sure to mark potentially\n   * invalid keys as valid again\n   */\n  resetKeyStatus() {\n    this.decryptionFailureCount = 0;\n    this._hasValidKey = true;\n  }\n\n  /**\n   * Ratchets the current key (or the one at keyIndex if provided) and\n   * returns the ratcheted material\n   * if `setKey` is true (default), it will also set the ratcheted key directly on the crypto key ring\n   * @param keyIndex\n   * @param setKey\n   */\n  ratchetKey(keyIndex?: number, setKey = true): Promise<CryptoKey> {\n    const currentKeyIndex = (keyIndex ??= this.getCurrentKeyIndex());\n\n    const existingPromise = this.ratchetPromiseMap.get(currentKeyIndex);\n    if (typeof existingPromise !== 'undefined') {\n      return existingPromise;\n    }\n    const ratchetPromise = new Promise<CryptoKey>(async (resolve, reject) => {\n      try {\n        const currentMaterial = this.getKeySet(currentKeyIndex).material;\n        const newMaterial = await importKey(\n          await ratchet(currentMaterial, this.keyProviderOptions.ratchetSalt),\n          currentMaterial.algorithm.name,\n          'derive',\n        );\n\n        if (setKey) {\n          this.setKeyFromMaterial(newMaterial, currentKeyIndex, true);\n        }\n        this.emit('keyRatcheted', newMaterial, keyIndex, this.participantId);\n        resolve(newMaterial);\n      } catch (e) {\n        reject(e);\n      } finally {\n        this.ratchetPromiseMap.delete(currentKeyIndex);\n      }\n    });\n    this.ratchetPromiseMap.set(currentKeyIndex, ratchetPromise);\n    return ratchetPromise;\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffer\n   * together with the material\n   * also resets the valid key property and updates the currentKeyIndex\n   */\n  async setKey(material: CryptoKey, keyIndex = 0) {\n    await this.setKeyFromMaterial(material, keyIndex);\n    this.resetKeyStatus();\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffer\n   * together with the material\n   * also updates the currentKeyIndex\n   */\n  async setKeyFromMaterial(material: CryptoKey, keyIndex = 0, emitRatchetEvent = false) {\n    workerLogger.debug('setting new key');\n    if (keyIndex >= 0) {\n      this.currentKeyIndex = keyIndex % this.cryptoKeyRing.length;\n    }\n    const keySet = await deriveKeys(material, this.keyProviderOptions.ratchetSalt);\n    this.setKeySet(keySet, this.currentKeyIndex, emitRatchetEvent);\n  }\n\n  async setKeySet(keySet: KeySet, keyIndex: number, emitRatchetEvent = false) {\n    this.cryptoKeyRing[keyIndex % this.cryptoKeyRing.length] = keySet;\n    if (emitRatchetEvent) {\n      this.emit('keyRatcheted', keySet.material, keyIndex, this.participantId);\n    }\n  }\n\n  async setCurrentKeyIndex(index: number) {\n    this.currentKeyIndex = index % this.cryptoKeyRing.length;\n    this.resetKeyStatus();\n  }\n\n  isEnabled() {\n    return this.enabled;\n  }\n\n  getCurrentKeyIndex() {\n    return this.currentKeyIndex;\n  }\n\n  /**\n   * returns currently used KeySet or the one at `keyIndex` if provided\n   * @param keyIndex\n   * @returns\n   */\n  getKeySet(keyIndex?: number) {\n    return this.cryptoKeyRing[keyIndex ?? this.currentKeyIndex];\n  }\n}\n","import { workerLogger } from '../../logger';\nimport { KEY_PROVIDER_DEFAULTS } from '../constants';\nimport { CryptorErrorReason } from '../errors';\nimport type {\n  E2EEWorkerMessage,\n  EnableMessage,\n  ErrorMessage,\n  KeyProviderOptions,\n  RatchetMessage,\n  RatchetRequestMessage,\n} from '../types';\nimport { FrameCryptor } from './FrameCryptor';\nimport { ParticipantKeyHandler } from './ParticipantKeyHandler';\n\nconst participantCryptors: FrameCryptor[] = [];\nconst participantKeys: Map<string, ParticipantKeyHandler> = new Map();\n\nlet publishCryptors: FrameCryptor[] = [];\nlet publisherKeys: ParticipantKeyHandler;\n\nlet isEncryptionEnabled: boolean = false;\n\nlet useSharedKey: boolean = false;\n\nlet sharedKey: CryptoKey | undefined;\n\nlet sifTrailer: Uint8Array | undefined;\n\nlet keyProviderOptions: KeyProviderOptions = KEY_PROVIDER_DEFAULTS;\n\nworkerLogger.setDefaultLevel('info');\n\nonmessage = (ev) => {\n  const { kind, data }: E2EEWorkerMessage = ev.data;\n\n  switch (kind) {\n    case 'init':\n      workerLogger.info('worker initialized');\n      keyProviderOptions = data.keyProviderOptions;\n      useSharedKey = !!data.keyProviderOptions.sharedKey;\n      // acknowledge init successful\n      const enableMsg: EnableMessage = {\n        kind: 'enable',\n        data: { enabled: isEncryptionEnabled },\n      };\n      publisherKeys = new ParticipantKeyHandler(undefined, isEncryptionEnabled, keyProviderOptions);\n      publisherKeys.on('keyRatcheted', emitRatchetedKeys);\n      postMessage(enableMsg);\n      break;\n    case 'enable':\n      setEncryptionEnabled(data.enabled, data.participantId);\n      workerLogger.info('updated e2ee enabled status');\n      // acknowledge enable call successful\n      postMessage(ev.data);\n      break;\n    case 'decode':\n      let cryptor = getTrackCryptor(data.participantId, data.trackId);\n      cryptor.setupTransform(\n        kind,\n        data.readableStream,\n        data.writableStream,\n        data.trackId,\n        data.codec,\n      );\n      break;\n    case 'encode':\n      let pubCryptor = getPublisherCryptor(data.trackId);\n      pubCryptor.setupTransform(\n        kind,\n        data.readableStream,\n        data.writableStream,\n        data.trackId,\n        data.codec,\n      );\n      break;\n    case 'setKey':\n      if (useSharedKey) {\n        workerLogger.debug('set shared key');\n        setSharedKey(data.key, data.keyIndex);\n      } else if (data.participantId) {\n        getParticipantKeyHandler(data.participantId).setKey(data.key, data.keyIndex);\n      } else {\n        workerLogger.error('no participant Id was provided and shared key usage is disabled');\n      }\n      break;\n    case 'removeTransform':\n      unsetCryptorParticipant(data.trackId);\n      break;\n    case 'updateCodec':\n      getTrackCryptor(data.participantId, data.trackId).setVideoCodec(data.codec);\n      break;\n    case 'setRTPMap':\n      publishCryptors.forEach((cr) => {\n        cr.setRtpMap(data.map);\n      });\n      break;\n    case 'ratchetRequest':\n      handleRatchetRequest(data);\n      break;\n    case 'setSifTrailer':\n      handleSifTrailer(data.trailer);\n      break;\n    default:\n      break;\n  }\n};\n\nasync function handleRatchetRequest(data: RatchetRequestMessage['data']) {\n  const keyHandler = getParticipantKeyHandler(data.participantId);\n  await keyHandler.ratchetKey(data.keyIndex);\n  keyHandler.resetKeyStatus();\n}\n\nfunction getTrackCryptor(participantId: string, trackId: string) {\n  let cryptor = participantCryptors.find((c) => c.getTrackId() === trackId);\n  if (!cryptor) {\n    workerLogger.info('creating new cryptor for', { participantId });\n    if (!keyProviderOptions) {\n      throw Error('Missing keyProvider options');\n    }\n    cryptor = new FrameCryptor({\n      participantId,\n      keys: getParticipantKeyHandler(participantId),\n      keyProviderOptions,\n      sifTrailer,\n    });\n\n    setupCryptorErrorEvents(cryptor);\n    participantCryptors.push(cryptor);\n  } else if (participantId !== cryptor.getParticipantId()) {\n    // assign new participant id to track cryptor and pass in correct key handler\n    cryptor.setParticipant(participantId, getParticipantKeyHandler(participantId));\n  }\n  if (sharedKey) {\n  }\n  return cryptor;\n}\n\nfunction getParticipantKeyHandler(participantId?: string) {\n  if (!participantId) {\n    return publisherKeys!;\n  }\n  let keys = participantKeys.get(participantId);\n  if (!keys) {\n    keys = new ParticipantKeyHandler(participantId, true, keyProviderOptions);\n    if (sharedKey) {\n      keys.setKey(sharedKey);\n    }\n    participantKeys.set(participantId, keys);\n  }\n  return keys;\n}\n\nfunction unsetCryptorParticipant(trackId: string) {\n  participantCryptors.find((c) => c.getTrackId() === trackId)?.unsetParticipant();\n}\n\nfunction getPublisherCryptor(trackId: string) {\n  let publishCryptor = publishCryptors.find((cryptor) => cryptor.getTrackId() === trackId);\n  if (!publishCryptor) {\n    if (!keyProviderOptions) {\n      throw new TypeError('Missing keyProvider options');\n    }\n    publishCryptor = new FrameCryptor({\n      keys: publisherKeys!,\n      participantId: 'publisher',\n      keyProviderOptions,\n    });\n    setupCryptorErrorEvents(publishCryptor);\n    publishCryptors.push(publishCryptor);\n  }\n  return publishCryptor;\n}\n\nfunction setEncryptionEnabled(enable: boolean, participantId?: string) {\n  if (!participantId) {\n    isEncryptionEnabled = enable;\n    publisherKeys.setEnabled(enable);\n  } else {\n    getParticipantKeyHandler(participantId).setEnabled(enable);\n  }\n}\n\nfunction setSharedKey(key: CryptoKey, index?: number) {\n  workerLogger.debug('setting shared key');\n  sharedKey = key;\n  publisherKeys?.setKey(key, index);\n  for (const [, keyHandler] of participantKeys) {\n    keyHandler.setKey(key, index);\n  }\n}\n\nfunction setupCryptorErrorEvents(cryptor: FrameCryptor) {\n  cryptor.on('cryptorError', (error) => {\n    const msg: ErrorMessage = {\n      kind: 'error',\n      data: { error: new Error(`${CryptorErrorReason[error.reason]}: ${error.message}`) },\n    };\n    postMessage(msg);\n  });\n}\n\nfunction emitRatchetedKeys(material: CryptoKey, keyIndex?: number) {\n  const msg: RatchetMessage = {\n    kind: `ratchetKey`,\n    data: {\n      // participantId,\n      keyIndex,\n      material,\n    },\n  };\n  postMessage(msg);\n}\n\nfunction handleSifTrailer(trailer: Uint8Array) {\n  sifTrailer = trailer;\n  participantCryptors.forEach((c) => {\n    c.setSifTrailer(trailer);\n  });\n}\n\n// Operations using RTCRtpScriptTransform.\n// @ts-ignore\nif (self.RTCTransformEvent) {\n  workerLogger.debug('setup transform event');\n  // @ts-ignore\n  self.onrtctransform = (event) => {\n    const transformer = event.transformer;\n    workerLogger.debug('transformer', transformer);\n    transformer.handled = true;\n    const { kind, participantId, trackId, codec } = transformer.options;\n    const cryptor =\n      kind === 'encode' ? getPublisherCryptor(trackId) : getTrackCryptor(participantId, trackId);\n    workerLogger.debug('transform', { codec });\n    cryptor.setupTransform(kind, transformer.readable, transformer.writable, trackId, codec);\n  };\n}\n"],"names":["root","definition","this","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","replaceLoggingMethods","level","loggerName","i","length","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","undefined","realMethod","Logger","name","defaultLevel","factory","currentLevel","self","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","resetLevel","removeItem","clearPersistedLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","exports","module","LogLevel","info","workerLogger","ENCRYPTION_ALGORITHM","UNENCRYPTED_BYTES","key","delta","audio","empty","KEY_PROVIDER_DEFAULTS","sharedKey","ratchetSalt","ratchetWindowSize","failureTolerance","LivekitError","Error","constructor","code","message","super","MediaDeviceFailure","CryptorErrorReason","getFailure","error","NotFound","PermissionDenied","DeviceInUse","Other","CryptorError","reason","InternalError","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","args","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","eventsModule","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","warned","w","String","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","CryptorEvent","AudioPresets","getAlgoOptions","algorithmName","salt","encodedSalt","TextEncoder","encode","hash","ArrayBuffer","iterations","deriveKeys","material","algorithmOptions","algorithm","encryptionKey","crypto","subtle","deriveKey","telephone","maxBitrate","speech","music","musicStereo","musicHighQuality","musicHighQualityStereo","SifGuard","consecutiveSifCount","lastSifReceivedAt","userFramesSinceSif","recordSif","_a","sifSequenceStartedAt","Date","now","recordUserFrame","reset","isSifAllowed","BaseFrameCryptor","encodeFunction","encodedFrame","controller","decodeFunction","FrameCryptor","opts","sendCounts","Map","participantId","rtpMap","keyProviderOptions","sifTrailer","Uint8Array","from","sifGuard","setParticipant","id","unsetParticipant","getParticipantId","getTrackId","trackId","setVideoCodec","codec","videoCodec","setRtpMap","map","setupTransform","operation","readable","writable","transformFn","transformStream","TransformStream","transform","pipeThrough","pipeTo","catch","isEnabled","data","byteLength","enqueue","getKeySet","keyIndex","getCurrentKeyIndex","iv","makeIV","getMetadata","synchronizationSource","timestamp","frameHeader","getUnencryptedBytes","frameTrailer","cipherText","encrypt","additionalData","newData","newUint8","MissingKey","frameData","trailerBytes","every","isFrameServerInjected","hasValidKey","decodedFrame","decryptFrame","decryptionSuccess","InvalidKey","decryptionFailure","initialMaterial","ratchetOpts","ratchetCount","keySet","ivLength","cipherTextStart","cipherTextLength","plainText","decrypt","ratchetedKeySet","RTCEncodedAudioFrame","newMaterial","ratchetKey","frame","setKeySet","setCurrentKeyIndex","setKeyFromMaterial","ivView","DataView","has","Math","floor","random","sendCount","setUint32","isVideoFrame","detectedCodec","getVideoCodec","naluIndices","stream","result","start","pos","searchLength","end","findNALUIndices","some","naluIndex","NALUType","SLICE_IDR","SLICE_NON_IDR","includes","parseNALUType","size","payloadType","setSifTrailer","trailer","startByte","kNaluTypeMask","ParticipantKeyHandler","_hasValidKey","decryptionFailureCount","currentKeyIndex","cryptoKeyRing","enabled","ratchetPromiseMap","resetKeyStatus","setEnabled","setKey","existingPromise","ratchetPromise","__awaiter","currentMaterial","keyBytes","usage","importKey","deriveBits","ratchet","delete","emitRatchetEvent","participantCryptors","participantKeys","publisherKeys","publishCryptors","isEncryptionEnabled","useSharedKey","getTrackCryptor","cryptor","find","c","getParticipantKeyHandler","setupCryptorErrorEvents","getPublisherCryptor","publishCryptor","msg","kind","postMessage","emitRatchetedKeys","onmessage","ev","enableMsg","enable","readableStream","writableStream","keyHandler","setSharedKey","forEach","cr","handleRatchetRequest","RTCTransformEvent","onrtctransform","event","transformer","handled","options"],"mappings":"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","x_google_ignoreList":[0,5]}